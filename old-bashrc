# .bashrc

# Source global definitions
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

# User specific environment
if ! [[ "$PATH" =~ "$HOME/.local/bin:$HOME/bin:" ]]
then
    PATH="$HOME/.local/bin:$HOME/bin:$PATH"
fi
export PATH

# Uncomment the following line if you don't like systemctl's auto-paging feature:
# export SYSTEMD_PAGER=

# User specific aliases and functions
if [ -d ~/.bashrc.d ]; then
	for rc in ~/.bashrc.d/*; do
		if [ -f "$rc" ]; then
			. "$rc"
		fi
	done
fi

unset rc

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

#//////////////////////////////////////////////////////////////////////////////
#///////////////////////////COSAS QUE PONGO YO/////////////////////////////////
#//////////////////////////////////////////////////////////////////////////////

#tree automáticamente al hacer cd
#tree automáticamente al hacer cd
cd() { builtin cd "$@" && echo -e "Moving to \033[1;36m$(pwd)\033[0m" && tree -aCFL 1 --noreport --dirsfirst; }

#t
t() { echo -e "We're at \033[1;33m$(pwd)\033[0m" && tree -aCFL 1 --noreport --dirsfirst; }

#colorcitos
PS1="\\[\\e]0;\\u@\\h:\\w\\a\\]\\[\\e[1;32m\\]\\u@\\h\\[\\e[1;34m\\] [\\w] \\\$\\[\\e[0m\\] "

#llevarme automáticamente a carpetas
#backend proyecto notas
alias projectNotes="cd ~/Documents/Proyectos/notes/backend/ && npm start"
alias cdNotes="cd ~/Documents/Proyectos/notes/"

#Abrir .bashrc con mousepad
alias bashrc="mousepad ~/.bashrc & exit"

#Abrir configuración de awesome con mousepad
alias aw="mousepad ~/.config/awesome/rc.lua & exit"

#Alias a heroku porque es un ejecutable sin más y no se instala y que pereza tener que escribir la ruta cada vez
alias heroku="~/Descargas/programs/heroku/bin/run"

#Instalar actualizaciones
alias update="figlet Sudo password && sudo echo ':)' && figlet Dnf && sudo dnf update -y && figlet Flatpak && flatpak update -y && figlet Terminado! && notify-send 'Update' 'Las actualizaciones ya han terminado'"

#Texto al abrir la terminal
#`stty size | cut -d" " -f2`    para saber el ancho de la terminal
randomPhrase()
{
	#Select the phrase

	allPhrases=("Hacking Something..." "[object Object]" "Sudo password is 1234" "undefined is not an object" "Stealing your wifi password..." "Sudo make me a sandwich" $RANDOM$RANDOM$RANDOM "Can you fix my printer?" "Hacking your Facebook..." "%RANDOM_PHRASE%" "I forgot the phrase" "NULL" "Preparing to hack..." "undefined" "I have your credit card information" "Hi" "The doctor said I had tomato loss" "Ancient aliens, it's all true" "Fedora 36" "Awesome!")

	phraseNumber=$[$RANDOM % ${#allPhrases[@]}]

	phrase=${allPhrases[$phraseNumber]}

	#Select the command

	commandNumber=$[$RANDOM % 10 + 1]

	if [[ $commandNumber -gt 4 ]]
	then
		figlet $phrase -w `stty size | cut -d" " -f2`| lolcat -r
	else
		allCows=("beavis.zen" "blowfish" "bud-frogs" "bunny" "cheese" "cower" "default" "dragon" "dragon-and-cow" "elephant" "elephant-in-snake" "eyes" "flaming-sheep" "fox" "ghostbusters" "head-in" "hellokitty" "kiss" "kitty" "koala" "kosh" "luke-koala" "meow" "milk" "moofasa" "moose" "mutilated" "ren" "sheep" "skeleton" "small" "stegosaurus" "stimpy" "supermilker" "surgery" "telebears" "three-eyes" "turkey" "turtle" "tux" "udder" "vader" "vader-koala" "www")

		cowNumber=$[$RANDOM % $((${#allCows[@]} + 5))] #dejar 5 extras para default

		#elegir con que vaca nos identificamos hoy
		if [[ $cowNumber -gt  $((${#allCows[@]} - 1)) ]]
		then
			cow="default"
		else
			cow=${allCows[$cowNumber]}
		fi

		cowsay -f $cow $phrase
	fi
}

theThingAtTheStart()
{
    if [[ $(pwd) = "/home/$(whoami)" ]]
    then
        randomPhrase
    else
        t
    fi
}

theThingAtTheStart
#//////////////////////////////////////////////////////////////////////////////
